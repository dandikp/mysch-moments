@function str-replace($string, $find, $replace: '') {
	$index: str-index($string, $find);

	@if $index {
		@return str-slice($string, 1, $index - 1) + str-replace(str-slice(string, $index + str-length($find)), $find, $replace);
	}

	@return $string;
}

@function capitalize($string) {
	@return to-upper-case(str-slice($string, 1, 1)) + str-slice($string, 2);
}

@function uncapitalize($string) {
	@return to-lower-case(str-slice($string, 1, 1)) + str-slice($string, 2);
}

@function translate-media-condition($media-condition) {
	$conditions : (
		"screen": "only screen",
		"print": "only print",
		"onSmallMobile": "(max-width: #{map-get($screen-breakpoints, "mobile-small")})",
		"onMobile": "(max-width: #{map-get($screen-breakpoints, "mobile")})",
		"onLargeMobile": "(max-width: #{map-get($screen-breakpoints, "mobile-large")})",
		"onTablet": "(max-width: #{map-get($screen-breakpoints, "tablet")})",
		"onLargeTablet": "(max-width: #{map-get($screen-breakpoints, "tablet-large")})",
		"onDesktop": "(max-width: #{map-get($screen-breakpoints, "desktop")})",
		"onLargeDesktop": "(min-width: #{map-get($screen-breakpoints, "desktop") + 1px })",
		"onWidescreen": "(min-width: #{map-get($screen-breakpoints, "widescreen")})",
		"onlyDesktop": "(min-width: #{map-get($screen-breakpoints, "tablet-large") + 1px })"
	);

	@return map-get($conditions, $media-condition);
}

@function get-gradient($gradient-index) {
	$gradient-color: '';
	$gradient-colors: map-get($gradients, $gradient-index);

	@each $gradient in $gradient-colors {
		$separators: '';

		@if ($gradient-color != '') {
			$separators: ", ";
		}

		$gradient-color: $gradient-color + $separators + $gradient;
	}

	@return $gradient-color;
}